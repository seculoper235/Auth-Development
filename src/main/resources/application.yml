spring:
  profiles:
    group:
      server: production
    active: server
---
## 기본 서버 환경 설정

# Spring 관련
spring:
  config:
    activate:
      on-profile: production
  devtools:
    add-properties: false
  output:
    ansi:
      enabled: always

  # DataSource 설정
  main.allow-bean-definition-overriding: true
  sql.init.encoding: UTF-8
  datasource:
    hikari:
      driver-class-name: org.postgresql.Driver
      jdbc-url: jdbc:postgresql://localhost:5432/?characterEncoding=utf-8
      username: devteller
      password: devteller123!

  data:
    redis:
      host: localhost
      port: 6379

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  liquibase:
    change-log: db/changelog.yaml

  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
          clientAuthenticationMethod: client_secret_post
          authorizationGrantType: authorization_code
          scope:
            - email
            - profile
        naver:
          clientId: ${NAVER_CLIENT_ID}
          clientSecret: ${NAVER_CLIENT_SECRET}
          clientAuthenticationMethod: client_secret_post
          authorizationGrantType: authorization_code
          scope:
            - nickname
            - email
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          clientName: Naver
        kakao:
          clientId: ${KAKAO_CLIENT_ID}
          clientSecret: ${KAKAO_CLIENT_SECRET}
          clientAuthenticationMethod: client_secret_post
          authorizationGrantType: authorization_code
          scope:
            - profile_nickname
            - profile_image
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          clientName: Kakao
      # Provider 설정
      provider:
        google:
          authorizationUri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
oauth:
  google:
    baseUrl: https://oauth2.googleapis.com
  naver:
    baseUrl: https://nid.naver.com
  kakao:
    adminKey: ${KAKAO_ADMIN_KEY}

# 서버 실행 관련(포트 등)
server:
  compression:
    enabled: true
    mime-types: text/html,text/plain,text/css,application/javascript,application/json
    min-response-size: 500
  port: 8080

jwt:
  secret: myjwttestsecretkey
  EXPIRATION_MILLISECONDS: 3600000  # 2 * 1000 * 60 * 30L
  REFRESH_EXPIRATION_MILLISECONDS: 86400000 # 48 * 1000 * 60 * 30L

